{"ast":null,"code":"var _jsxFileName = \"/Users/jojuseon/redux-todo/src/routes/Board/routes/Update.js\",\n    _s = $RefreshSig$();\n\nimport React, { useRef, useEffect, memo } from 'react';\nimport { Link } from 'react-router-dom';\nimport { CHANGE_MENU, UPDATE_ITEM } from '../reducers/boardReducer';\nimport useInputs from '../hooks/useInputs';\nimport { getLocalItem } from '../utils';\nimport Error from '../components/Error';\nimport './form.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Update = /*#__PURE__*/_s( /*#__PURE__*/memo(_c = _s(_ref => {\n  _s();\n\n  let {\n    dispatch,\n    match,\n    history\n  } = _ref;\n  const item = getLocalItem(match.params.id);\n  const [state, onChangeInput] = useInputs({\n    title: item ? item.title : '',\n    content: item ? item.content : ''\n  });\n  const {\n    title,\n    content\n  } = state;\n  const inputTitle = useRef(null);\n  const inputContent = useRef(null);\n  useEffect(() => {\n    dispatch({\n      type: CHANGE_MENU,\n      menu: 'Update'\n    });\n\n    if (inputTitle.current) {\n      inputTitle.current.focus();\n    }\n  }, [dispatch]);\n\n  const onClickSubmit = () => {\n    if (!title) {\n      alert('Please enter a title.');\n      inputTitle.current.focus();\n    } else if (!content) {\n      alert('Please enter the content.');\n      inputContent.current.focus();\n    } else {\n      item.title = title;\n      item.content = content;\n      dispatch({\n        type: UPDATE_ITEM,\n        item\n      });\n      history.push(`/detail/${item.id}`);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: item ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"input-box\",\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          ref: inputTitle,\n          placeholder: \"title\",\n          name: \"title\",\n          value: title,\n          onChange: onChangeInput\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        className: \"textarea\",\n        ref: inputContent,\n        placeholder: \"content\",\n        name: \"content\",\n        value: content,\n        onChange: onChangeInput\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"btn-box\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          onClick: onClickSubmit,\n          children: \"submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Link, {\n          to: \"/\",\n          children: \"cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(Error, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 9\n    }, this)\n  }, void 0, false);\n}, \"ZWeQuCZUQULmjcVyVAJnP+ZMmWI=\", false, function () {\n  return [useInputs];\n})), \"ZWeQuCZUQULmjcVyVAJnP+ZMmWI=\", false, function () {\n  return [useInputs];\n});\n\n_c2 = Update;\nexport default Update;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Update$memo\");\n$RefreshReg$(_c2, \"Update\");","map":{"version":3,"sources":["/Users/jojuseon/redux-todo/src/routes/Board/routes/Update.js"],"names":["React","useRef","useEffect","memo","Link","CHANGE_MENU","UPDATE_ITEM","useInputs","getLocalItem","Error","Update","dispatch","match","history","item","params","id","state","onChangeInput","title","content","inputTitle","inputContent","type","menu","current","focus","onClickSubmit","alert","push"],"mappings":"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","sourcesContent":["import React, { useRef, useEffect, memo } from 'react';\nimport { Link } from 'react-router-dom';\nimport { CHANGE_MENU, UPDATE_ITEM } from '../reducers/boardReducer';\nimport useInputs from '../hooks/useInputs';\nimport { getLocalItem } from '../utils';\nimport Error from '../components/Error';\nimport './form.css';\n\nconst Update = memo(({ dispatch, match, history }) => {\n  const item = getLocalItem(match.params.id);\n  const [state, onChangeInput] = useInputs({\n    title: item ? item.title : '',\n    content: item ? item.content : '',\n  });\n  const { title, content } = state;\n  const inputTitle = useRef(null);\n  const inputContent = useRef(null);\n\n  useEffect(() => {\n    dispatch({ type: CHANGE_MENU, menu: 'Update' });\n    if (inputTitle.current) {\n      inputTitle.current.focus();\n    }\n  }, [dispatch]);\n\n  const onClickSubmit = () => {\n    if (!title) {\n      alert('Please enter a title.');\n      inputTitle.current.focus();\n    } else if (!content) {\n      alert('Please enter the content.');\n      inputContent.current.focus();\n    } else {\n      item.title = title;\n      item.content = content;\n      dispatch({ type: UPDATE_ITEM, item });\n      history.push(`/detail/${item.id}`);\n    }\n  };\n\n  return (\n    <>\n      {item ? (\n        <div className=\"form\">\n          <div className=\"input-box\">\n            <input\n              ref={inputTitle}\n              placeholder=\"title\"\n              name=\"title\"\n              value={title}\n              onChange={onChangeInput}\n            />\n          </div>\n          <textarea\n            className=\"textarea\"\n            ref={inputContent}\n            placeholder=\"content\"\n            name=\"content\"\n            value={content}\n            onChange={onChangeInput}\n          />\n          <div className=\"btn-box\">\n            <span onClick={onClickSubmit}>submit</span>\n            <Link to=\"/\">cancel</Link>\n          </div>\n        </div>\n      ) : (\n        <Error />\n      )}\n    </>\n  );\n});\n\nexport default Update;\n"]},"metadata":{},"sourceType":"module"}