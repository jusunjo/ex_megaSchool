{"ast":null,"code":"import { createAction, handleActions } from \"redux-actions\";\nconst CHECKED = \"CHECKED\";\nconst INSERT = \"INSERT\";\nconst REMOVE = \"REMOVE\";\nexport const checked = createAction(CHECKED, id => id);\nlet id = 4;\nexport const insert = createAction(INSERT, text => ({\n  id: id++,\n  text,\n  checked: false\n}));\nexport const remove = createAction(REMOVE, id => id);\nconst initalState = {\n  todolist: [{\n    id: 1,\n    text: \"1등하기\",\n    checked: false\n  }, {\n    id: 2,\n    text: \"2등하기\",\n    checked: false\n  }, {\n    id: 3,\n    text: \"3등하기\",\n    checked: false\n  }]\n};\nconst todo = handleActions({\n  [INSERT]: (state, action) => ({ ...state,\n    todolist: state.todolist.concat(action.payload)\n  })\n} // {\n//     [REMOVE]: (state, action) => ({\n//         ...state,\n//         todolist: state.todolist.filter(\n//             (todo) => todo.id !== action.payload\n//         ),\n//     }),\n// },\n// initalState\n);\nexport default todo;","map":{"version":3,"sources":["/Users/jojuseon/redux-todo/src/modules/todo.js"],"names":["createAction","handleActions","CHECKED","INSERT","REMOVE","checked","id","insert","text","remove","initalState","todolist","todo","state","action","concat","payload"],"mappings":"AAAA,SAASA,YAAT,EAAuBC,aAAvB,QAA4C,eAA5C;AAEA,MAAMC,OAAO,GAAG,SAAhB;AACA,MAAMC,MAAM,GAAG,QAAf;AACA,MAAMC,MAAM,GAAG,QAAf;AAEA,OAAO,MAAMC,OAAO,GAAGL,YAAY,CAACE,OAAD,EAAWI,EAAD,IAAQA,EAAlB,CAA5B;AAEP,IAAIA,EAAE,GAAG,CAAT;AACA,OAAO,MAAMC,MAAM,GAAGP,YAAY,CAACG,MAAD,EAAUK,IAAD,KAAW;AAClDF,EAAAA,EAAE,EAAEA,EAAE,EAD4C;AAElDE,EAAAA,IAFkD;AAGlDH,EAAAA,OAAO,EAAE;AAHyC,CAAX,CAAT,CAA3B;AAKP,OAAO,MAAMI,MAAM,GAAGT,YAAY,CAACI,MAAD,EAAUE,EAAD,IAAQA,EAAjB,CAA3B;AAEP,MAAMI,WAAW,GAAG;AAChBC,EAAAA,QAAQ,EAAE,CACN;AACIL,IAAAA,EAAE,EAAE,CADR;AAEIE,IAAAA,IAAI,EAAE,MAFV;AAGIH,IAAAA,OAAO,EAAE;AAHb,GADM,EAMN;AACIC,IAAAA,EAAE,EAAE,CADR;AAEIE,IAAAA,IAAI,EAAE,MAFV;AAGIH,IAAAA,OAAO,EAAE;AAHb,GANM,EAWN;AACIC,IAAAA,EAAE,EAAE,CADR;AAEIE,IAAAA,IAAI,EAAE,MAFV;AAGIH,IAAAA,OAAO,EAAE;AAHb,GAXM;AADM,CAApB;AAoBA,MAAMO,IAAI,GAAGX,aAAa,CACtB;AACI,GAACE,MAAD,GAAU,CAACU,KAAD,EAAQC,MAAR,MAAoB,EAC1B,GAAGD,KADuB;AAE1BF,IAAAA,QAAQ,EAAEE,KAAK,CAACF,QAAN,CAAeI,MAAf,CAAsBD,MAAM,CAACE,OAA7B;AAFgB,GAApB;AADd,CADsB,CAOtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAfsB,CAA1B;AAkBA,eAAeJ,IAAf","sourcesContent":["import { createAction, handleActions } from \"redux-actions\";\n\nconst CHECKED = \"CHECKED\";\nconst INSERT = \"INSERT\";\nconst REMOVE = \"REMOVE\";\n\nexport const checked = createAction(CHECKED, (id) => id);\n\nlet id = 4;\nexport const insert = createAction(INSERT, (text) => ({\n    id: id++,\n    text,\n    checked: false,\n}));\nexport const remove = createAction(REMOVE, (id) => id);\n\nconst initalState = {\n    todolist: [\n        {\n            id: 1,\n            text: \"1등하기\",\n            checked: false,\n        },\n        {\n            id: 2,\n            text: \"2등하기\",\n            checked: false,\n        },\n        {\n            id: 3,\n            text: \"3등하기\",\n            checked: false,\n        },\n    ],\n};\n\nconst todo = handleActions(\n    {\n        [INSERT]: (state, action) => ({\n            ...state,\n            todolist: state.todolist.concat(action.payload),\n        }),\n    }\n    // {\n    //     [REMOVE]: (state, action) => ({\n    //         ...state,\n    //         todolist: state.todolist.filter(\n    //             (todo) => todo.id !== action.payload\n    //         ),\n    //     }),\n    // },\n    // initalState\n);\n\nexport default todo;\n"]},"metadata":{},"sourceType":"module"}