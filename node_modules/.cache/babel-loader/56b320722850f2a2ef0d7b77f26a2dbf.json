{"ast":null,"code":"export const GET_LOCAL_STORAGE = 'GET_LOCAL_STORAGE';\nexport const ADD_ITEM = 'ADD_ITEM';\nexport const UPDATE_ITEM = 'UPDATE_ITEM';\nexport const DELETE_ITEM = 'DELETE_ITEM';\nexport const INCREASE_VIEWS = 'INCREASE_VIEWS';\nexport const CHANGE_MENU = 'CHANGE_MENU';\nexport const boardReducer = (state, action) => {\n  switch (action.type) {\n    case GET_LOCAL_STORAGE:\n      {\n        const localList = localStorage.getItem('list');\n        const list = localList ? JSON.parse(localList) : [];\n        const localId = localStorage.getItem('id');\n        const id = localId ? parseInt(localId) : 0;\n        return { ...state,\n          list,\n          id\n        };\n      }\n\n    case ADD_ITEM:\n      {\n        const list = [...state.list, action.item];\n        const id = state.id + 1;\n        return { ...state,\n          list,\n          id\n        };\n      }\n\n    case UPDATE_ITEM:\n      {\n        const list = state.list.map(item => item.id === action.item.id ? action.item : item);\n        return { ...state,\n          list\n        };\n      }\n\n    case DELETE_ITEM:\n      {\n        const list = state.list.filter(item => item.id !== action.id);\n        return { ...state,\n          list\n        };\n      }\n\n    case INCREASE_VIEWS:\n      {\n        const list = state.list.map(item => item.id === action.id ? { ...item,\n          views: item.views + 1\n        } : item);\n        return { ...state,\n          list\n        };\n      }\n\n    case CHANGE_MENU:\n      {\n        return { ...state,\n          menu: action.menu\n        };\n      }\n\n    default:\n      return { ...state\n      };\n  }\n};","map":{"version":3,"sources":["/Users/jojuseon/redux-todo/src/routes/Board/reducers/boardReducer.js"],"names":["GET_LOCAL_STORAGE","ADD_ITEM","UPDATE_ITEM","DELETE_ITEM","INCREASE_VIEWS","CHANGE_MENU","boardReducer","state","action","type","localList","localStorage","getItem","list","JSON","parse","localId","id","parseInt","item","map","filter","views","menu"],"mappings":"AAAA,OAAO,MAAMA,iBAAiB,GAAG,mBAA1B;AACP,OAAO,MAAMC,QAAQ,GAAG,UAAjB;AACP,OAAO,MAAMC,WAAW,GAAG,aAApB;AACP,OAAO,MAAMC,WAAW,GAAG,aAApB;AACP,OAAO,MAAMC,cAAc,GAAG,gBAAvB;AACP,OAAO,MAAMC,WAAW,GAAG,aAApB;AAEP,OAAO,MAAMC,YAAY,GAAG,CAACC,KAAD,EAAQC,MAAR,KAAmB;AAC7C,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKT,iBAAL;AAAwB;AACtB,cAAMU,SAAS,GAAGC,YAAY,CAACC,OAAb,CAAqB,MAArB,CAAlB;AACA,cAAMC,IAAI,GAAGH,SAAS,GAAGI,IAAI,CAACC,KAAL,CAAWL,SAAX,CAAH,GAA2B,EAAjD;AACA,cAAMM,OAAO,GAAGL,YAAY,CAACC,OAAb,CAAqB,IAArB,CAAhB;AACA,cAAMK,EAAE,GAAGD,OAAO,GAAGE,QAAQ,CAACF,OAAD,CAAX,GAAuB,CAAzC;AACA,eAAO,EACL,GAAGT,KADE;AAELM,UAAAA,IAFK;AAGLI,UAAAA;AAHK,SAAP;AAKD;;AACD,SAAKhB,QAAL;AAAe;AACb,cAAMY,IAAI,GAAG,CAAC,GAAGN,KAAK,CAACM,IAAV,EAAgBL,MAAM,CAACW,IAAvB,CAAb;AACA,cAAMF,EAAE,GAAGV,KAAK,CAACU,EAAN,GAAW,CAAtB;AACA,eAAO,EACL,GAAGV,KADE;AAELM,UAAAA,IAFK;AAGLI,UAAAA;AAHK,SAAP;AAKD;;AACD,SAAKf,WAAL;AAAkB;AAChB,cAAMW,IAAI,GAAGN,KAAK,CAACM,IAAN,CAAWO,GAAX,CAAgBD,IAAD,IAC1BA,IAAI,CAACF,EAAL,KAAYT,MAAM,CAACW,IAAP,CAAYF,EAAxB,GAA6BT,MAAM,CAACW,IAApC,GAA2CA,IADhC,CAAb;AAGA,eAAO,EACL,GAAGZ,KADE;AAELM,UAAAA;AAFK,SAAP;AAID;;AACD,SAAKV,WAAL;AAAkB;AAChB,cAAMU,IAAI,GAAGN,KAAK,CAACM,IAAN,CAAWQ,MAAX,CAAmBF,IAAD,IAAUA,IAAI,CAACF,EAAL,KAAYT,MAAM,CAACS,EAA/C,CAAb;AACA,eAAO,EACL,GAAGV,KADE;AAELM,UAAAA;AAFK,SAAP;AAID;;AACD,SAAKT,cAAL;AAAqB;AACnB,cAAMS,IAAI,GAAGN,KAAK,CAACM,IAAN,CAAWO,GAAX,CAAgBD,IAAD,IAC1BA,IAAI,CAACF,EAAL,KAAYT,MAAM,CAACS,EAAnB,GAAwB,EAAE,GAAGE,IAAL;AAAWG,UAAAA,KAAK,EAAEH,IAAI,CAACG,KAAL,GAAa;AAA/B,SAAxB,GAA6DH,IADlD,CAAb;AAGA,eAAO,EACL,GAAGZ,KADE;AAELM,UAAAA;AAFK,SAAP;AAID;;AACD,SAAKR,WAAL;AAAkB;AAChB,eAAO,EACL,GAAGE,KADE;AAELgB,UAAAA,IAAI,EAAEf,MAAM,CAACe;AAFR,SAAP;AAID;;AACD;AACE,aAAO,EAAE,GAAGhB;AAAL,OAAP;AArDJ;AAuDD,CAxDM","sourcesContent":["export const GET_LOCAL_STORAGE = 'GET_LOCAL_STORAGE';\nexport const ADD_ITEM = 'ADD_ITEM';\nexport const UPDATE_ITEM = 'UPDATE_ITEM';\nexport const DELETE_ITEM = 'DELETE_ITEM';\nexport const INCREASE_VIEWS = 'INCREASE_VIEWS';\nexport const CHANGE_MENU = 'CHANGE_MENU';\n\nexport const boardReducer = (state, action) => {\n  switch (action.type) {\n    case GET_LOCAL_STORAGE: {\n      const localList = localStorage.getItem('list');\n      const list = localList ? JSON.parse(localList) : [];\n      const localId = localStorage.getItem('id');\n      const id = localId ? parseInt(localId) : 0;\n      return {\n        ...state,\n        list,\n        id,\n      };\n    }\n    case ADD_ITEM: {\n      const list = [...state.list, action.item];\n      const id = state.id + 1;\n      return {\n        ...state,\n        list,\n        id,\n      };\n    }\n    case UPDATE_ITEM: {\n      const list = state.list.map((item) =>\n        item.id === action.item.id ? action.item : item\n      );\n      return {\n        ...state,\n        list,\n      };\n    }\n    case DELETE_ITEM: {\n      const list = state.list.filter((item) => item.id !== action.id);\n      return {\n        ...state,\n        list,\n      };\n    }\n    case INCREASE_VIEWS: {\n      const list = state.list.map((item) =>\n        item.id === action.id ? { ...item, views: item.views + 1 } : item\n      );\n      return {\n        ...state,\n        list,\n      };\n    }\n    case CHANGE_MENU: {\n      return {\n        ...state,\n        menu: action.menu,\n      };\n    }\n    default:\n      return { ...state };\n  }\n};\n"]},"metadata":{},"sourceType":"module"}